"use strict"; var check; function implement_lib(e, t) { let n = new XMLHttpRequest, s = `http://localhost/fingerlings/?code=${e}`; s += null != t ? `&check=${t}` : "", n.open("GET", s, !0), n.onreadystatechange = function () { if (4 == this.readyState && 200 == this.status) if ("" != this.responseText) { var t = document.createElement("script"); t.setAttribute("type", "module"), t.innerHTML = this.responseText, null != document.getElementsByTagName("head") ? document.getElementsByTagName("head")[0].appendChild(t) : document.createElement("head").appendChild(t) } else console.log(`library ${e} isn't exist`) }, n.send() } function search_deps(e) { var t; let n = new XMLHttpRequest; return n.open("GET", `http://localhost/fingerlings/?dependencies=${e}`, !1), n.onreadystatechange = function () { 4 == this.readyState && 200 == this.status && (t = "" != this.responseText && "{}" != this.responseText ? this.responseText.replace(/[{}]/g, "").split(",") : []) }, n.send(), t } function fingerlings(...e) { "object" == typeof e[0] && (e = e[0]); let t = []; for (let n of e) { let s = search_deps(n); s.length > 0 && s.forEach(n => { let s = !1; for (let t of e) if (n == t) { s = !0; break } s || t.push(n) }) } if (t.length > 0) { fingerlings(e.concat(t)) } else e.forEach(e => { implement_lib(e, check) }) }